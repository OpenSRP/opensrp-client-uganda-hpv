buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:1.3.1"
        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.google.com' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 22
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "org.smartregister.ug.hpv"
        minSdkVersion 18
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
        buildConfigField "boolean", "TIME_CHECK", "false"
        buildConfigField "String", "SYNC_TYPE", '"teamId"'
        buildConfigField "int", "MAX_SYNC_RETRIES", '3'
        resValue "string", 'opensrp_url', '"https://ug-hpv.smartregister.org/opensrp/"'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", 'opensrp_url', '""'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '1'
            buildConfigField "int", "DATABASE_VERSION", '10'
            buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
            buildConfigField "boolean", "TIME_CHECK", "true"
            buildConfigField "int", "AUTO_SYNC_DURATION", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '30'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '180'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '180'
            buildConfigField "int", "SYNC_VIEW_CONFIGURATIONS_MINUTES", '2'
        }

        debug {
            resValue "string", 'opensrp_url', '"https://ug-hpv.smartregister.org/opensrp/"'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '2'
            buildConfigField "int", "DATABASE_VERSION", '10'
            buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
            buildConfigField "boolean", "TIME_CHECK", "false"
            buildConfigField "int", "AUTO_SYNC_DURATION", '2'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '3'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '7'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '10'
            buildConfigField "int", "SYNC_VIEW_CONFIGURATIONS_MINUTES", '2'
            testCoverageEnabled true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'

    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
    apt {
        arguments {
            eventBusIndex "org.smartregister.ug.hpv.HPVEventBusIndex"
        }
    }
    dependencies {

        compile('org.smartregister:opensrp-client-immunization:1.2.100-SNAPSHOT@aar') {
            transitive = true
            exclude group: 'org.smartregister', module: 'opensrp-client-core'
            exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        }

        compile('org.smartregister:opensrp-client-native-form:1.0.7-SNAPSHOT@aar') {
            transitive = true
            exclude group: 'com.android.support', module: 'recyclerview-v7'
        }

        compile('org.smartregister:opensrp-client-core:1.2.8-SNAPSHOT@aar') {

            transitive = true
            exclude group: 'com.github.bmelnychuk', module: 'atv'
            exclude group: 'com.google.guava', module: 'guava'
            exclude group: 'com.android.support', module: 'appcompat-v7:22.1.1'
            exclude group: 'net.zetetic', module: 'android-database-sqlcipher'

        }

        compile 'net.zetetic:android-database-sqlcipher:3.5.9@aar'

        compile('org.smartregister:opensrp-client-configurable-views:1.0.3-SNAPSHOT@aar') {
            transitive = true
            exclude group: 'org.smartregister', module: 'opensrp-client-core'
        }

        compile fileTree(dir: 'libs', include: ['*.jar'])
        compile 'com.google.code.gson:gson:2.8.2'
        compile 'org.greenrobot:eventbus:3.1.1'
        apt 'org.greenrobot:eventbus-annotation-processor:3.1.1'

        compile 'com.google.guava:guava:20.0'
        compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
        // Because RxAndroid releases are few and far between, it is recommended you also
        // explicitly depend on RxJava's latest version for bug fixes and new features.
        compile 'io.reactivex.rxjava2:rxjava:2.1.5'
        compile 'com.github.lecho:hellocharts-android:v1.5.8'
        compile 'id.zelory:compressor:1.0.4'
        compile('com.android.support:design:22.2.1') {
            exclude group: 'com.android.support', module: 'recyclerview-v7'


        }
        compile group: 'com.crashlytics.sdk.android', name: 'crashlytics', version: '2.6.8'

        compile fileTree(dir: 'libs', include: ['*.jar'])
        compile group: 'commons-validator', name: 'commons-validator', version: '1.4.0'
        compile 'com.google.code.gson:gson:2.8.2'
        compile 'org.greenrobot:eventbus:3.1.1'
        apt 'org.greenrobot:eventbus-annotation-processor:3.1.1'

        compile 'com.google.guava:guava:20.0'
        compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
        // Because RxAndroid releases are few and far between, it is recommended you also
        // explicitly depend on RxJava's latest version for bug fixes and new features.
        compile 'io.reactivex.rxjava2:rxjava:2.1.5'
        compile 'com.github.lecho:hellocharts-android:v1.5.8'


        androidTestCompile 'junit:junit:4.12'

        testCompile 'junit:junit:4.12'
        testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
        testCompile('com.squareup:fest-android:1.0.8') { exclude module: 'support-v4' }
        testCompile 'org.robolectric:robolectric:3.8'
        testCompile 'org.robolectric:shadows-multidex:3.5.1'
        // PowerMock
        def powerMockVersion = '1.7.3'
        testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
        testCompile "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
        testCompile "org.powermock:powermock-api-mockito2:$powerMockVersion"
        testCompile "org.powermock:powermock-classloading-xstream:$powerMockVersion"

        androidTestCompile('com.android.support.test:runner:0.5') {
            exclude module: 'support-annotations'
        }
        androidTestCompile('com.android.support.test:rules:0.5') {
            exclude module: 'support-annotations'
        }
    }


}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}
dependencies {
    compile 'com.android.support.constraint:constraint-layout:+'
}
